#---------------------------------*- sh -*-------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2010 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     makeThirdPartyFunctions
#
# Description
#     Functions for managing the third-party packages
#
#------------------------------------------------------------------------------


#
# get the number of processor cores
#
# $# > 0 - verbose
#
getNCOMPPROCS()
{
    if [ -r /proc/cpuinfo ]
    then
        WM_NCOMPPROCS=$(egrep "^processor" /proc/cpuinfo | wc -l)
        [ $WM_NCOMPPROCS -le 8 ] || WM_NCOMPPROCS=8
    else
        WM_NCOMPPROCS=1
    fi

    [ $# -gt 0 ] && echo "Building on $WM_NCOMPPROCS cores"
}

# 
# download file $1 from url $2 into download/ directory
#
downloadFile()
{
    [ "$#" -eq 2 ] || {
        echo "downloadFile called with incorrect number of arguments $@"
        return 1
    }

    file="$1"
    url="$2"

    if [ ! -e download/$file ]
    then
        mkdir -p download
        echo "downloading $tarFile from $url"
        ( cd download && wget --no-check-certificate $url )
    fi
}


#
# copy Make/{files,options} from wmakeFiles/PACKAGE
#
# $1 = PACKAGE
# $2 (optional) TARGET DIRECTORY
cpMakeFiles() {
    set +x

    [ "$#" -eq 1 -o "$#" -eq 2 ] || {
        echo "cpMakeFiles called with incorrect number of arguments $@"
        return 1
    }

    pkg=$1
    dst=${2:-.}

    wmakeFiles=$WM_THIRD_PARTY_DIR/wmakeFiles/$pkg

    for i in $(cd $wmakeFiles && find . -type f)
    do
        d=${i%%/*}   # dirname
        b=${i##*/}   # basename

        mkdir -p $dst/$d/Make 2>/dev/null
        [ -e $dst/$d/Make/$b ] || cp $wmakeFiles/$i $dst/$d/Make/$b
    done

    set -x
}


# ----------------------------------------------------------------- end-of-file
