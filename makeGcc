#!/bin/sh -u
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2010 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     makeGcc
#
# Description
#     Build script for gmp, mpfr and gcc
#
# Note
#     gcc 4.3.2 is known to miscompile GMP 4.3.x on 64-bit machines
#
#------------------------------------------------------------------------------
gmpPACKAGE=gmp-5.0.1
mpfrPACKAGE=mpfr-2.4.2
gccPACKAGE=gcc-4.4.3

#------------------------------------------------------------------------------
# run from this third-party directory only
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}
. tools/makeThirdPartyFunctions
#------------------------------------------------------------------------------

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: ${0##*/} [gmp-VERSION] [mpfr-VERSION] [gcc-VERSION]

* build combinations of gmp, mpfr and gcc
      $gmpPACKAGE
      $mpfrPACKAGE
      $gccPACKAGE

USAGE
    exit 1
}


# parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help)
        usage
        ;;
    gmp-[4-9]*)
        gmpPACKAGE="${1%%/}"
        shift
        ;;
    mpfr-[2-9]*)
        mpfrPACKAGE="${1%%/}"
        shift
        ;;
    gcc-[4-9]*)
        gccPACKAGE="${1%%/}"
        shift
        ;;
    *)
        usage "unknown option/argument: '$*'"
        ;;
    esac
done


# set 32 or 64 bit ABI
case "$WM_ARCH_OPTION" in
32 | 64)
    ABI=$WM_ARCH_OPTION
    ;;
*)
    usage "Please set WM_ARCH_OPTION to either 32 or 64'$*'"
    ;;
esac


# get the number of cores to build on
getNCOMPPROCS

GCC_ARCH_PATH=$WM_THIRD_PARTY_DIR/$gccPACKAGE/platforms/$WM_ARCH$WM_COMPILER_ARCH
GMP_ARCH_PATH=$WM_THIRD_PARTY_DIR/$gmpPACKAGE/platforms/$WM_ARCH$WM_COMPILER_ARCH
MPFR_ARCH_PATH=$WM_THIRD_PARTY_DIR/$mpfrPACKAGE/platforms/$WM_ARCH$WM_COMPILER_ARCH

#
# Build GMP
#
echo "---------------"
if [ -d $GMP_ARCH_PATH ]
then
    echo "Already built: $gmpPACKAGE"
else
    echo "Starting build: $gmpPACKAGE"
(
    cd $gmpPACKAGE || exit 1
    make distclean
    rm -rf build
    mkdir -p build
    cd build

    ../configure ABI=$ABI \
        --prefix=$GMP_ARCH_PATH \
        --enable-cxx \
    && make -j $WM_NCOMPPROCS \
    && make install \
    && echo "Built: $gmpPACKAGE"
) || {
    echo "Error building: $gmpPACKAGE"
    exit 1
}
fi

export LD_LIBRARY_PATH="$GMP_ARCH_PATH/lib:$LD_LIBRARY_PATH"

#
# Build MPFR
#
echo "---------------"
if [ -d $MPFR_ARCH_PATH ]
then
    echo "Already built: $mpfrPACKAGE"
else
    echo "Starting build: $mpfrPACKAGE"
(
    cd $mpfrPACKAGE || exit 1
    make distclean
    rm -rf build
    mkdir -p build
    cd build

    ../configure ABI=$ABI \
       --prefix=$MPFR_ARCH_PATH \
       --with-gmp=$GMP_ARCH_PATH \
    && make -j $WM_NCOMPPROCS \
    && make install \
    && echo "Built: $mpfrPACKAGE"
) || {
    echo "Error building: $mpfrPACKAGE"
    exit 1
}
fi

export LD_LIBRARY_PATH="$MPFR_ARCH_PATH/lib:$LD_LIBRARY_PATH"

#
# Build GCC
# might need 32-bit glibc-devel headers to compile
#
echo "---------------"
if [ -d $GCC_ARCH_PATH ]
then
    echo "Already built: $gccPACKAGE"
else
    echo "Starting build: $gccPACKAGE"
(
    cd $gccPACKAGE || exit 1
    make distclean
    rm -rf build
    mkdir -p build
    cd build

    ../configure \
        --prefix=$GCC_ARCH_PATH \
        --with-gmp=$GMP_ARCH_PATH \
        --with-mpfr=$MPFR_ARCH_PATH \
        --with-pkgversion=OpenFOAM \
        --enable-languages=c,c++ \
        --enable-__cxa_atexit \
        --enable-libstdcxx-allocator=new \
        --with-system-zlib \
    && make -j $WM_NCOMPPROCS \
    && make install \
    && echo "Built: $gccPACKAGE"
) || {
    echo "Error building: $gccPACKAGE"
    exit 1
}
fi


# ----------------------------------------------------------------- end-of-file
